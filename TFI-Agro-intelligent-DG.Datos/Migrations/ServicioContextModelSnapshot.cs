// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TFI_Agro_intelligent_DG.Contexts;

namespace TFIAgrointelligentDG.Datos.Migrations
{
    [DbContext(typeof(ServicioContext))]
    partial class ServicioContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("TFI_Agro_intelligent_DG.Negocio.Modelo.Pack", b =>
                {
                    b.Property<int>("PackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PackId");

                    b.ToTable("Pack");

                    b.HasData(
                        new
                        {
                            PackId = 1,
                            Descripcion = "Pack Little"
                        });
                });

            modelBuilder.Entity("TFI_Agro_intelligent_DG.Negocio.Modelo.PackServicio", b =>
                {
                    b.Property<int>("PackServicioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("PackId")
                        .HasColumnType("int");

                    b.Property<int>("ServicioId")
                        .HasColumnType("int");

                    b.HasKey("PackServicioId");

                    b.HasIndex("PackId");

                    b.HasIndex("ServicioId");

                    b.ToTable("PackServicios");

                    b.HasData(
                        new
                        {
                            PackServicioId = 1,
                            Cantidad = 20,
                            PackId = 1,
                            ServicioId = 3
                        },
                        new
                        {
                            PackServicioId = 2,
                            Cantidad = 40,
                            PackId = 1,
                            ServicioId = 2
                        });
                });

            modelBuilder.Entity("TFI_Agro_intelligent_DG.Negocio.Modelo.Sensor", b =>
                {
                    b.Property<int>("SensorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SensorId");

                    b.ToTable("Sensores");

                    b.HasData(
                        new
                        {
                            SensorId = 1,
                            Descripcion = "Sensor Anti-Helada"
                        },
                        new
                        {
                            SensorId = 2,
                            Descripcion = "Sensor de Riego"
                        },
                        new
                        {
                            SensorId = 3,
                            Descripcion = "Sensor Anti-Plagas"
                        });
                });

            modelBuilder.Entity("TFI_Agro_intelligent_DG.Negocio.Modelo.Servicio", b =>
                {
                    b.Property<int>("ServicioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SensorId")
                        .HasColumnType("int");

                    b.HasKey("ServicioId");

                    b.HasIndex("SensorId");

                    b.ToTable("Servicios");

                    b.HasData(
                        new
                        {
                            ServicioId = 1,
                            Descripcion = "Sistema Anti-Helada",
                            SensorId = 1
                        },
                        new
                        {
                            ServicioId = 2,
                            Descripcion = "Sistema Único de Riego",
                            SensorId = 2
                        },
                        new
                        {
                            ServicioId = 3,
                            Descripcion = "Sistema Anti-Plaga",
                            SensorId = 3
                        });
                });

            modelBuilder.Entity("TFI_Agro_intelligent_DG.Negocio.Modelo.PackServicio", b =>
                {
                    b.HasOne("TFI_Agro_intelligent_DG.Negocio.Modelo.Pack", "Pack")
                        .WithMany("PackServicios")
                        .HasForeignKey("PackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TFI_Agro_intelligent_DG.Negocio.Modelo.Servicio", "Servicio")
                        .WithMany("PackServicios")
                        .HasForeignKey("ServicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pack");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("TFI_Agro_intelligent_DG.Negocio.Modelo.Servicio", b =>
                {
                    b.HasOne("TFI_Agro_intelligent_DG.Negocio.Modelo.Sensor", "Sensor")
                        .WithMany()
                        .HasForeignKey("SensorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sensor");
                });

            modelBuilder.Entity("TFI_Agro_intelligent_DG.Negocio.Modelo.Pack", b =>
                {
                    b.Navigation("PackServicios");
                });

            modelBuilder.Entity("TFI_Agro_intelligent_DG.Negocio.Modelo.Servicio", b =>
                {
                    b.Navigation("PackServicios");
                });
#pragma warning restore 612, 618
        }
    }
}
